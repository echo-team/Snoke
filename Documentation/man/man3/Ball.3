.TH "Ball" 3 "Thu May 2 2019" "Snoke" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Ball
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ball\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "bool \fBinit\fP (\fBPoint\fP dim)"
.br
.ti -1c
.RI "bool \fBgenerateBall\fP (\fBLabyrinth\fP labyrinth, \fBPoint\fP *change[2], int changeSize)"
.br
.ti -1c
.RI "\fBPoint\fP \fBgetCoords\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBPoint\fP \fBposition\fP"
.br
.ti -1c
.RI "std::mt19937 \fBrng\fP"
.br
.ti -1c
.RI "uint32_t \fBseed_val\fP"
.br
.ti -1c
.RI "std::uniform_int_distribution< int > \fBdistributionX\fP"
.br
.ti -1c
.RI "std::uniform_int_distribution< int > \fBdistributionY\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Describes the \fBBall\fP entity of the game 
.PP
\fBParameters:\fP
.RS 4
\fI{Point}\fP position - a Coordinates(x, y) of a \fBBall\fP in the Console window 
.br
\fI{mt19937}\fP rng - the variable, responible for the 'random' during the game 
.br
\fI{uint32_t}\fP seed_val - value 'feeded' to the 'random' generator 
.br
\fI{uniform_int_distribution<int>}\fP distributionX - an equally likely int distribution for x coordinate of a \fBBall\fP 
.br
\fI{uniform_int_distribution<int>}\fP distributionY - an equally likely int distribution for y coordinate of a \fBBall\fP 
.RE
.PP

.PP
Definition at line 17 of file ball\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "bool Ball::generateBall (\fBLabyrinth\fP labyrinth, \fBPoint\fP * change[2], int changeSize)"
Generate the \fBBall\fP 
.PP
\fBParameters:\fP
.RS 4
\fI{Labyrinth}\fP labyrinth - the current state of the labyrinth object for intersection checking 
.RE
.PP
\fBReturns:\fP
.RS 4
{bool} - mark of whether the ball was successfully generated 
.RE
.PP
Generate numbers until u get a free spot
.PP
Definition at line 23 of file ball\&.cpp\&.
.SS "\fBPoint\fP Ball::getCoords ()"
Get the ball coords without giving the direct access 
.PP
\fBReturns:\fP
.RS 4
{Point} 
.RE
.PP

.PP
Definition at line 47 of file ball\&.cpp\&.
.SS "bool Ball::init (\fBPoint\fP fieldSize)"
Initialization 
.PP
\fBParameters:\fP
.RS 4
\fI{Point}\fP fieldSize - the size of the game field(x, y) 
.RE
.PP
\fBReturns:\fP
.RS 4
{bool} - mark of successful initialization 
.RE
.PP

.PP
Definition at line 8 of file ball\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "std::uniform_int_distribution<int> Ball::distributionX\fC [private]\fP"

.PP
Definition at line 23 of file ball\&.h\&.
.SS "std::uniform_int_distribution<int> Ball::distributionY\fC [private]\fP"

.PP
Definition at line 24 of file ball\&.h\&.
.SS "\fBPoint\fP Ball::position\fC [private]\fP"

.PP
Definition at line 20 of file ball\&.h\&.
.SS "std::mt19937 Ball::rng\fC [private]\fP"

.PP
Definition at line 21 of file ball\&.h\&.
.SS "uint32_t Ball::seed_val\fC [private]\fP"

.PP
Definition at line 22 of file ball\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Snoke from the source code\&.
